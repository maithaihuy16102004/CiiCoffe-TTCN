<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABnRJREFUaEPtl3tMU1ccxzFm2Uz231zMdAsyB3+4hGxjoy0tlnNAwZUiPogxExSH
        U4fGqdvE7KGbysPS21usAgqitDwGbdEBrZEozPgKG8b4h9O9RA3bkk3mk8e0/JZzy63lV6DtoIwlfJNv
        evidc37387v33HMuQUETmtCERiypVDqFELKMUmqmlH5PCHlAKQXRsbGxMXjOuFFMTMxiQsgNd2BsQkgz
        njcuRCn9EsMOZULINUJIHqV0Gs7zn4gQsg1D+uh7hJBFON+YilIaSSl9NAicTyaEPKaUzsV5x0yEkFMY
        yl+z9yYiIuIpnDvgio2NfR3DDOX0lDg4/Gk8XDeqhF/cTylNwfkDLkLIjkFAPKDbTSoAu3qAq75IwOMP
        4fwBF9sSh4JmdxpDY6Mn8S3OH3ARQm56u9Pe7PYk2nH+gItS2sUujqH8NctBCHmI8wdc4uPHQP5azIPz
        B1z/6wJ6KkNVW1Jl3aNVQNZKWVdPVdh8fJ2Aqbc69FZ3VRjs/TB+AExheigUpYd6QA7Xb/goHnqqw6C3
        OvQmvk7AxArorfYEZXBFqzzj3vpZrjEtgD1uVoSjUdWHYfy2TeVg8N2VsxLwdQIusCVe9QDy31dw3jET
        2NQHBwHyzzZ1Ec47ZgJ7UpwHkL9uVFOcV6ZTLJNw8vpITXQI7ht1gS3xlAcUc89tcIm1cb/TLTifcrvy
        GalWfl3KKUDCKbqknCJXaVA+i8eNmqBB9TLY1X94wF3MBui94zRr436b+jYcV7+C80k4eRaDV+6NBRkX
        Dawt1cpvSbXyNDx21AQNSXPAru70gBzKDN6uisZ5FHrF81JOfodB55zeA7oLPMTui3cWIRSiaJbwinA8
        b1QEJ1ShUBflCYtdJ4PB7jyTRKsoZKDLTMuh4kqV4Gh9zJMChGUlfyTVKooj8pVT8fwRC4qCAA5PBagN
        B/iaADTOd5q1WYz1FQUN+t0TqVHMZnBRujlQ0LrPVcD6oxshWk/g/boNsNaSCay/f1ldwDlGLKEAH4zn
        MUk4uZ2BrTavc8FjH758BKhhnlBAJKdYgnOMWBh0KON5kVw0ZVBzCiiUXCrzABedeWyjAP9mrvRGEARN
        wnn+lfQVdRG80WrQGS0/dfxwugPa6wG+2+Fc7+XTnWZtFmuvh45rpzt0Rms7b7Lq2NyUmpTJEk5+mYGl
        12SAumQhKPdSSD60BHa15Ljgiy+WgIIn7EWGkLVhMCMteBtm8Uu68qMS3mg9w5usILqioenMk80fgOd5
        yMvLcw9BRX3TgDlrirf+yODpvnkg0/Vvm/1mf4tFpFWvEmLhn70BM9JmOp0anIW5vEqvtz2tM1qKdUZL
        nzuIYKO1q6u7508RPiQkRLBYRFd3dycbI47PN1YD4Z1rOqFINQBe9ILSRcCd1wtngkQrh+CMWe4FaDDf
        sOIrj03TmSxnPcDd3HS+rYXBFhYWugpgxTCdONfW7D42vXiLAMmWC1v/GJ6ZLadFZSlCe/bWcBf89NTg
        XMw3rPYesT7HmyxXMTB2QUXdDYfD8bizs9NVAGs7HA4H6xPHZZeXg4Ijwp3NP6uDpNKFHvDMCcWJwu9b
        e6LgpfQQJ3zazO2Yb1gBwCTeaD2OYYfylV/aW9va2lwFsDaLuY9Zuj9DAFtR9a6wxne2ZHu+A1y06yQO
        2/SqeOc/wXxepTeZUzHkcD5otrfW1ta6CjCbzUJM7P+8bL8AJdcroajtgGun2dWSDcmli4XlZKhMhge2
        BdBqToB3eDm8uGJm3wtpIesxm1fV1NRM5o3WnzGkFzt2Zuf8JRawOzfvLouJ/WrDUqEAdsrivZ7Zdmk/
        9NmTXJ8fDnsiNJUoGzGbT+IqzHGDAHr1tt2aDrGArF2aDjG+uTRHgCeGucLJiuGZf2/O8PyGsifew2w+
        iTda9RjOF3Pl5ruhYWHAzJXX3hPjqgLnjsLW+8qvMmCNNVM4oDYc+0CA/6YtfxB4wa2YzSfxRss5DOer
        097LvJ+2et0D95jGWAXpxZsgSqd0vajsN7qACAXcPrkCg/c7KQmz+SSdyfobBvPVuQfKf2XGceadR0pg
        oWG5a8dhH2mas1r42548CHziSczls3RGSw+++Gj641INxOmdpzB7GmUVCcJL64K3qR9Bw9uvYa5xJalW
        OkWiVWyVaOX3WSGbC2XgsMrY/xIPwZa0Co8ft5JpZMFSrbxWkh+1FPdNaLzrHzwD1xOag9C2AAAAAElF
        TkSuQmCC
</value>
  </data>
</root>