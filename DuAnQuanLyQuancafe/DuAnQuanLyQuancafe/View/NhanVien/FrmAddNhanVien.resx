<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8f/mAcsYvWcexwAAAABJRU5ErkJggg==
</value>
  </data>
</root>