<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABmlJREFUaEPtl3tMU1ccxzFm2Uz231zM3BZkDv5wCdnGBi0USwsKrhTxQYyZoDic
        OjRO3SZmD91UHhb6wCqgIEp5DUrRCa2RKMz4ChvG+IfTvQQN25JN5hNwWn77ndNzr7fXy+ydtWLCN/nm
        np5z7q+f77mn994GjWpUo3p4KRSKcRqNZr5Wq7Wjf8D2TTwC5/j4+Dg2deQpLi5uDgL3CIHFxvF2Nn1k
        CeG+EsMOZwxxAV2A7Qns9McrhFkvhvTR1/Hc2azM4xFCRKLvCKBkGQPcxeM0Vi7wQoAjYii5xho9ERER
        T7GSgRPeUd6QApJyZloC7PksES7adPQoMSeNlQ2ccOU2SoDw5qC7q3UALr2X675MEs/fzcoGThigXQTh
        tdJiaLFFV+I7VjZwwgCXhNBSK/0gC65ENysbOOGX9pMvlwKTY1IDF+MWKxs4sZWThJJjrg4rGzg90QEG
        a0N1a9OVA/4KkLNI2T9YFzaDlX/0ul0fenmgLgy2fZToBVOSGQqlaGGf0FLj1o8TYbA+DLDmJVb+0YsE
        QHuBEBO40sXDBxhunNQKaAByuUkId6tuSAwj206dm8AP1E5OYuUDJ3Amn5eEkudzrFzgBU79LgkgeXbq
        S1m5wAtcKQmSUHLcqteycryUJtX8KGPMgUhDbAjrenTCbXREEmzwCvAibak5Ln0HK8NLvUH9jKIo5qLC
        qIIoo6ofj/lqq/pZNux/QYvuFQT5UwQGcDoX4PZVj0lbPO7UX4GD+ldZGV648jkEXr0tHpTGWCBtDHQZ
        ncGm+F/QkjIVofrugxzOBN6li2Wn81JZVM8rjDFXCXTe0a1gOmWG+O2JnhA0iKo9yqwKZ9P9KzikC4Xm
        aGlgoZuVILXyRFFFqhICOr96AdScq6OOtcTdC4DGK3QHg5RFFKrHs9P8JygNAtgzHqAxHOAbDf5AZ3hM
        2qSPjOEcNt1LkQbVFAIXbZoKxZ3b+QAr9q3CEBr4oHklLGvKBjLuuRoxp9ip/hMN4IPZdC8hvIuALbEv
        5+HF3nN2L2it02mASKNqLjvVf5KClTKbzivSGKslUFOLtVB+plISnjh7/yoK/1a+ogerjGGnP5wsNc0R
        ZpvDarI1/dz749Fe6D4A8P1Gz36vmugxaZM+HOu9cLTXZHN0m6sdJnJuWkPaWFz9swQssyEL9OWz8A6k
        hdTdc2FzRx4PX3a6HFRmDfkhQ8iyMHgxI3g9Q/h/MlXti0LwYwgCnGta2o6xOz+V2WyGgoIC9smjmgNt
        XucsLVv3E4HXbp8OShO7bTKTz1yIjPrFtC/88zcRfpLH6cE5DMd3WSzOp3G1y9BDQhBqm6O/f2DwLwJK
        4ENCQqi5EP0DA31kDje/0FYPGrNnTyeV6rzgOc+smA3Gkxb6TIgqioHgrMnCAAaG5ZvMtfsnmKqbjntB
        i9x2squDwJaUlPABSBiiQye62oVzM8vWUkiyXcj+F8MTk+00uzKNtqesC+fhJ6YH5zMs37Rtr+M5c3XT
        eSGAlItrmnvcbvfdvr4+PgBpY5+bjHHzcquqQGXU0JUtPG6ClIpZ98ETJ5Ul0+PbW6Ph5cwQD3zGpA0M
        yzfh4o3BS39QCPpfPvdrd2dXVxcfgLRJn3DOvB1ZFGxh3Xt0j2/qyL3/N4DhuCdx2OrXuJX/lGH5Lku1
        PV345Q/yLrurs7GxkQ9gt9tpHzf+ReUOChVjUUNp107+TrMZQ6RWzKHbyVqbCjedM6HTngTvmmPgpYWT
        hl7ICFnBkHxXQ0PDWFz9X4SAPti9KTfvby7AlvyCa6SPG9db59EA5CnLwQvtPLMDhlwp/OuH25UMbeXq
        VoYkT8YaewL3xXK8fouhlwuQs9nQy/Wvqcij8BrrNPpklQrwR3sWD3/PydcZkjzh6luEYL7aWGW/FhoW
        BsTGqsbrXL+u2HNHIft90ddZsNSRTR9QK/d/SOG/7SqUgKfuZEjyZLY1nRCCyXHG+9k3MpYsvynsM9jq
        8Pa5Gl/K1J4g7J0/tlhDA1w5vFAKHp2SwpDkyVTt+F0IIMf5O6t+I5Ya27S3HGZZF1B4YvKSZjheBP+4
        UiXgkw8zHPnCJ+6gFIC//EmFARIsnqcwuRqVNUn0R8vDO/V3oOWd1xnOyJSiSDEO/8ysw1eFGyTImhIl
        uB34x6d1xi1wpixm00a+lAZlMP5RaYwqjJ7Hukb1hCgo6F88A9cTTD1SKgAAAABJRU5ErkJggg==
</value>
  </data>
</root>