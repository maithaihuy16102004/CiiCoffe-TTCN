<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dxROyv8XNzWlfPj2TUEAAAAASUVORK5CYII=
</value>
  </data>
</root>